
document {
	Key => {hilbertIdeal, (hilbertIdeal, LinearlyReductiveAction)},
	
	Headline => "compute (possibly non-invariant) generators for the Hilbert ideal",
	
	Usage => "hilbertIdeal V",
	
	Inputs => {
	        "V" => LinearlyReductiveAction => {"of a polynomial ring ", TT "S", " defining the group as an affine variety"},
		},
	    
	Outputs => {
		Ideal => {"the ideal of ", TT "R", " generated by the invariants (note that the generators of I are likely non-invariant)"}
		},
	    
	"This function is provided by the package ", TO InvariantRings,
	".",
	
	PARA { 
	    "This function computes the Hilbert ideal generated in a polynomial ring by the 
	    invariants of positive degree of a linearly reductive action.  The algorithm is
	    based on: ",
	    },
       	
	UL { 
	    {"Derksen, H. & Kemper, G. (2015).", EM " Computational Invariant Theory", 
	   ". Heidelberg: Springer. pp 159-164"}
        },
	
	PARA {
	    "The hope is that this function will be used to compute actual generating invariants, 
	    but the crucial step of the Reynolds operator is still missing."
	    },
	
	
	PARA {
	    "The next example constructs a cyclic group of order 2
	    as a set of two affine points. Then it introduces an
	    action of this group on a polynomial ring in two variables
	    and computes the Hilbert ideal. The action permutes the
	    variables of the polynomial ring. Note that the
	    generators of the Hilbert ideal need not be invariant."
	    },
	
	EXAMPLE {
		"S = QQ[z]",
		"A = ideal(z^2 - 1)",
		"M = matrix{{(z+1)/2, (1-z)/2},{(1-z)/2, (z+1)/2}}",
		"sub(M,z=>1),sub(M,z=>-1)",
		"R = QQ[x,y]",
		"V = linearlyReductiveAction(A, M, R)",
		"I = hilbertIdeal V",
		"apply(I_*, f -> isInvariant(f,V))"
		},
	    }

-*
-- Modify this to document linearlyReductiveAction?

document {
	Key => {hilbertIdeal, (hilbertIdeal, LinearlyReductiveAction)},
	
	Headline => "Computes (possibly non-invariant) generators for the Hilbert ideal",
	
	Usage => "hilbertIdeal V",
	
	Inputs => {
	        "V" => LinearlyReductiveAction => {"of a polynomial ring ", TT "S", " defining the group as an affine variety"},
	    	"R" => PolynomialRing => {"on which the group acts"},
		"W" => Matrix => {"whose entries are in ", TT "S", ", that encodes the group action"}
		},
	    
	Outputs => {
		Ideal => {"the ideal of ", TT "R", " generated by the invariants (note that the generators of I are likely non-invariant)"}
		},
	    
	"This function is provided by the package ", TO InvariantRings,
	". The hope is that this function will be used to compute actual generating invariants, 
	but the crucial step is still missing (the Reynolds operator). For now, it outputs the 
	ideal generated by the invariants in the polynomial ring, as the following example illustrates.",
	
	EXAMPLE {
		"S = QQ[z]",
		"hilbertIdeal(ideal(z^2 - 1), matrix{{(z+1)/2, (1-z)/2},{(1-z)/2, (z+1)/2}}, QQ[x,y])"
		},
	
	UL { 
	    {"Derksen, H. & Kemper, G. (2015).", EM "Computational Invariant Theory", 
	   ". Heidelberg: Springer. pp 159-164"}
        }

}
*-





